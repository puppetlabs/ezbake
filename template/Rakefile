require 'rake'
require './ezbake.rb'

puts "EZBAKE PROJECT NAME: EZBake::Config[:project]"


RAKE_ROOT = File.dirname(__FILE__)

#LEIN_SNAPSHOTS_IN_RELEASE = 'y'

task :makefile do
  # We need to build the Makefile from the template
  Pkg::Util::File.erb_file(File.join(RAKE_ROOT, "Makefile.erb"),
                           File.join(RAKE_ROOT, "Makefile"))
end

# Load tasks and variables for packaging automation
begin
  load File.join(RAKE_ROOT, 'ext', 'packaging', 'packaging.rake')
rescue LoadError
end

# We want to use ezbake's package:tar and its dependencies, because it
# contains all the special java snowflake magicks, so we have to clear the
# packaging repo's. We also want to use ezbake's clean task, since it has so
# much more clean than the packaging repo knows about
['clean'].each do |task|
  Rake::Task[task].clear if Rake::Task.task_defined?(task)
end

# All variables have been set, so we can load the ezbake tasks
Dir[ File.join(RAKE_ROOT, 'tasks','*.rake') ].sort.each { |t| load t }

task :'default.erb' => [ :package ]

task :allclean => [ :clobber ]

desc "Remove build artifacts (other than clojure (lein) builds)"
task :clean do
  rm_rf FileList["ext/files", "pkg", "*.tar.gz"]
end

desc "Get rid of build artifacts including clojure (lein) builds"
task :clobber => [ :clean ] do
  rm_rf FileList["target/EZBake::Config[:project]*jar"]
end

if defined?(Pkg) and defined?(Pkg::Config)
  @version = Pkg::Config.version
else
  begin
    %x{which git >/dev/null 2>&1}
    if $?.success?
      @version = %x{git describe --always --dirty}
      if $?.success?
        @version.chomp!
      end
    end
  rescue
    @version = "0.0-dev-build"
  end
end

task :version do
  puts @version
end


desc 'Build deb package'
#task :deb => [ 'package:implode', 'package:bootstrap', 'package:deb' ]
task :deb => [ 'package:deb' ]

desc "Build a Source rpm for EZBake::Config[:project]"
task :srpm => [ 'package:implode', 'package:bootstrap', 'package:srpm' ]

